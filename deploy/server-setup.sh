#!/bin/bash

# üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ TimeWeb –¥–ª—è –ê–õ–¨–¢–ê –°–õ–≠–ë –∫–∞—Ç–∞–ª–æ–≥–∞
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç Ubuntu 22.04/24.04 –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è Node.js –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

warn() {
    echo -e "${YELLOW}[WARNING] $1${NC}"
}

error() {
    echo -e "${RED}[ERROR] $1${NC}"
    exit 1
}

info() {
    echo -e "${BLUE}[INFO] $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ root
if [[ $EUID -ne 0 ]]; then
   error "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –æ—Ç –∏–º–µ–Ω–∏ root (sudo bash server-setup.sh)"
fi

log "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –ê–õ–¨–¢–ê –°–õ–≠–ë –∫–∞—Ç–∞–ª–æ–≥–∞..."

# 1. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
log "üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."
apt update && apt upgrade -y

# 2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
log "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."
apt install -y curl git nginx ufw htop unzip wget

# 3. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ UFW (Firewall)
log "üõ°Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ firewall..."
ufw --force reset
ufw default deny incoming
ufw default allow outgoing
ufw allow OpenSSH
ufw allow 'Nginx Full'
ufw --force enable

# 4. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js
log "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js v20..."
curl -fsSL https://deb.nodesource.com/setup_20.x | bash -
apt install -y nodejs

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Node.js
NODE_VERSION=$(node --version)
NPM_VERSION=$(npm --version)
log "‚úÖ Node.js —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $NODE_VERSION"
log "‚úÖ NPM —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $NPM_VERSION"

# 5. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PM2
log "üîÑ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PM2..."
npm install -g pm2

# 6. –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
if ! id "deploy" &>/dev/null; then
    log "üë§ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è deploy..."
    useradd -m -s /bin/bash deploy
    usermod -aG sudo deploy
else
    info "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å deploy —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# 7. –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
log "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
mkdir -p /var/www/alta-slab
chown -R deploy:deploy /var/www/alta-slab

# 8. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx (–±–∞–∑–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è)
log "üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx..."

# –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
rm -f /etc/nginx/sites-enabled/default

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
cat > /etc/nginx/sites-available/alta-slab << 'EOF'
server {
    listen 80;
    server_name _;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Static files handling
    location /assets {
        alias /var/www/alta-slab/client/src/assets;
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri $uri/ =404;
    }

    # API –∏ –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    location / {
        proxy_pass http://localhost:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # –¢–∞–π–º–∞—É—Ç—ã
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # –õ–æ–≥–∏
    access_log /var/log/nginx/alta-slab.access.log;
    error_log /var/log/nginx/alta-slab.error.log;
}
EOF

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è —Å–∞–π—Ç–∞
ln -sf /etc/nginx/sites-available/alta-slab /etc/nginx/sites-enabled/

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx
nginx -t

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Nginx
systemctl restart nginx
systemctl enable nginx

# 9. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Let's Encrypt (Certbot)
log "üîí –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Certbot –¥–ª—è SSL..."
apt install -y certbot python3-certbot-nginx

# 10. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥—Ä–æ—Ç–∞—Ü–∏–∏ –¥–ª—è PM2
log "üìã –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥—Ä–æ—Ç–∞—Ü–∏–∏..."
cat > /etc/logrotate.d/pm2 << 'EOF'
/home/deploy/.pm2/logs/*.log {
    daily
    missingok
    rotate 52
    compress
    notifempty
    create 644 deploy deploy
    postrotate
        sudo -u deploy pm2 reloadLogs
    endscript
}
EOF

# 11. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ swap —Ñ–∞–π–ª–∞ (–µ—Å–ª–∏ –º–µ–Ω—å—à–µ 2GB RAM)
TOTAL_MEM=$(free -m | awk 'NR==2{print $2}')
if [ $TOTAL_MEM -lt 2048 ]; then
    log "üíæ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ swap —Ñ–∞–π–ª–∞ (RAM: ${TOTAL_MEM}MB)..."
    
    if [ ! -f /swapfile ]; then
        fallocate -l 1G /swapfile
        chmod 600 /swapfile
        mkswap /swapfile
        swapon /swapfile
        echo '/swapfile none swap sw 0 0' >> /etc/fstab
        log "‚úÖ Swap —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: 1GB"
    else
        info "Swap —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    fi
fi

# 12. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ PM2
log "üîÑ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ PM2..."
sudo -u deploy bash -c "
    export HOME=/home/deploy
    cd /home/deploy
    pm2 startup systemd -u deploy --hp /home/deploy
" 2>/dev/null || true

# 13. –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
log "üìú –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è..."
cat > /usr/local/bin/update-alta-slab << 'EOF'
#!/bin/bash
set -e

USER="deploy"
APP_DIR="/var/www/alta-slab"

echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ê–õ–¨–¢–ê –°–õ–≠–ë –∫–∞—Ç–∞–ª–æ–≥–∞..."

# –ü–µ—Ä–µ—Ö–æ–¥ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
cd $APP_DIR

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
sudo -u $USER pm2 stop alta-slab || true

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞
sudo -u $USER git pull origin main

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
sudo -u $USER npm ci --production

# –°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
sudo -u $USER npm run build

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
sudo -u $USER pm2 start ecosystem.config.js

echo "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
EOF

chmod +x /usr/local/bin/update-alta-slab

# 14. –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ .env —Ñ–∞–π–ª–∞
log "‚öôÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ .env —Ñ–∞–π–ª–∞..."
cat > /var/www/alta-slab/.env.example << 'EOF'
# –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–∞—è —Å—Ä–µ–¥–∞
NODE_ENV=production

# –ü–æ—Ä—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
PORT=5000

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö PostgreSQL
DATABASE_URL=postgresql://username:password@localhost:5432/alta_slab

# API –∫–ª—é—á–∏
YANDEX_MAPS_API_KEY=your_yandex_maps_api_key_here

# –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
SESSION_SECRET=your_very_long_random_session_secret_here

# –î–æ–º–µ–Ω (–¥–ª—è production)
DOMAIN=your-domain.com
EOF

chown deploy:deploy /var/www/alta-slab/.env.example

# 15. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
log "üîç –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏..."

echo ""
echo "=== –ü–†–û–í–ï–†–ö–ê –£–°–¢–ê–ù–û–í–õ–ï–ù–ù–´–• –ö–û–ú–ü–û–ù–ï–ù–¢–û–í ==="
echo "Node.js: $(node --version)"
echo "NPM: $(npm --version)"
echo "PM2: $(pm2 --version)"
echo "Nginx: $(nginx -v 2>&1)"
echo "Certbot: $(certbot --version)"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
systemctl is-active --quiet nginx && echo "‚úÖ Nginx: —Ä–∞–±–æ—Ç–∞–µ—Ç" || echo "‚ùå Nginx: –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
systemctl is-active --quiet ufw && echo "‚úÖ UFW: –∞–∫—Ç–∏–≤–µ–Ω" || echo "‚ùå UFW: –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω"

log "üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"

echo ""
echo "=================== –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò ==================="
echo ""
echo "1. üìÇ –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∫–æ–¥ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ /var/www/alta-slab/"
echo "   cd /var/www/alta-slab"
echo "   git clone https://github.com/your-username/alta-slab-catalog.git ."
echo ""
echo "2. ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:"
echo "   cp .env.example .env"
echo "   nano .env"
echo ""
echo "3. üì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏ —Å–æ–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç:"
echo "   npm install"
echo "   npm run build"
echo ""
echo "4. üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ PM2:"
echo "   pm2 start ecosystem.config.js"
echo "   pm2 save"
echo ""
echo "5. üîí –ù–∞—Å—Ç—Ä–æ–π—Ç–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç (–µ—Å–ª–∏ –µ—Å—Ç—å –¥–æ–º–µ–Ω):"
echo "   certbot --nginx -d your-domain.com"
echo ""
echo "üìä –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "   pm2 list         - —Å–ø–∏—Å–æ–∫ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"
echo "   pm2 logs         - –ø—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤"
echo "   pm2 monit        - –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"
echo "   update-alta-slab - –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
echo ""
echo "üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://your-server-ip"
echo ""
echo "======================================================"